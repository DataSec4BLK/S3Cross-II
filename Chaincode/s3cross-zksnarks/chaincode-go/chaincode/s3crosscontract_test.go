package chaincode_test

import (
	"testing"

	_ "github.com/hyperledger/fabric-chaincode-go/v2/shim"
	_ "github.com/hyperledger/fabric-contract-api-go/v2/contractapi"
	"github.com/stretchr/testify/require"
	"s3cross-zksnarks/chaincode-go/chaincode"
	"s3cross-zksnarks/chaincode-go/chaincode/mocks"
)

func TestInitLedger(t *testing.T) {
	chaincodeStub := &mocks.FakeChaincodeStubInterface{}
	transactionContext := &mocks.FakeTransactionContextInterface{}
	transactionContext.GetStubReturns(chaincodeStub)

	//ipkStr, spkStr, rootStr, gvkStr
	ipkStr := "57db16be194b3619334f40648edcb9fc6639f7d7ed4fc64e946e34d063354aac"
	spkStr := "ebce1ff751e1d520021fafc0a268c61ad0fe00133f17bed5a6a2c78a82451e0f"
	rootStr := "2a638ffc1281dbd26549352aa39ab398441c73b053e6ad2b58696f6e0ff74f29"
	gvkStr := "e38078ab78d1fd6b2e7a8ef147143f6753631b85c17a2b7f8409270c9d39c2fcaac300077344523c35d7dc390cc8ca1530ddadba2b5a19413f4ac934fbc5a686a779775dd6a0e5e4bdf63d8470ca2d39e2b1153368163df9fb9398bdad0a8c48251b93185b0ad52328193eb76532e5e3e0e97c60fc9bce314665bfd5b754635f818b2d29895aab71fac03e61d5bb509cd80f9ba9c2aec440448e33a0386de1a60593092175d9ff46eba9e416b5ccdd00d55df277f0c7e33f1f86ecacbc637124ad1824170ba0c501eb1faa45af1c147207f0f1d70a35ad704d8cb46337b954bc9eb3afe6553d8b94f1f53458ee3b083f40914d75b7baaec53db9fd9438961b4a226d28a41189806b6e0fd77d2811678473151c54a9bbc59d725655887573d80100000010d4daab6321a501776a4d8b60afaaf84df7b7fc205ddb7ff174dcfbd3604de953e81ad1b99f502291955339c04c15a859b622f347aee4ea4d42ae3269b39575ddad1f6129eb216811a1834ad84323a1a41a7d2a4b66d1aa1c32c1e2e6e5e1c0c0ded66ba58f6174fe0a2ba49363e4fa21e3ff7ab956452ff0d4ca4a7b7b666930cc8d2ed189b2e4fd7d77cfbc2f58bdb07525b3f03f303136a48a820d350c51ff8885a8ef88df305088777f7dc135caaa7e5ef85f2a0ec795c0c3f48644214893868338f25b4663a7e939a322b37599cbd6844147fdee43305862f5884b373cbee3df633fdfd2c4584bba1cac6eefabae802b401e3043354506a63416688f703aa579527c5139207796121f967918b928746bba89b439ade96c094586be95f868e396554cddda46e5a667ec28f7bea79327e35c51aba8b027f6b7aa62539174db9956fe3d2ee8fac975b5149d2117b4a449826ba29adeaee9d1c82441433422c4ecc38e86a05e52755d6b61f75ab868afce96683e794ba6785d8e57330c1294b1974c55ccd09901c501d5f9bc90f62bc209f0d2bdd8b8d0ac343f9678dc48c489a8f850eb8362b229b82ec80e67745c08a7cb7ffdb84f7cf8b36bd787e71433189b9b4c3e1740e2ab3655fb8d69bf2050944fb97210e263bfd9d34a13da85b565e096ed0e4ca97c170b9f89f7987578b6034a4b0c15cf56568f787e9ca847f63c0000000100000000000000019bfa7469f1c6973950ec83b7f20ee034ec7fba36703cf39d8fd01506775f8b742b043c5563dbd078ebc60adb7594c9f10ca70a35d743ec7eeafc3d29e138ea14c3ad18b0ba73b60bc60277b02cfc05d626e7e7c502d899aefee5d6f87d47e4fe232db1ab3741add7815f9debacfffc1ac2242f17065f75d063f99c6d6713976b"

	psuManager := chaincode.SmartContract{}
	err := psuManager.InitLedger(transactionContext, ipkStr, spkStr, rootStr, gvkStr)
	require.NoError(t, err)

}

func TestCreatePseudonym(t *testing.T) {
	chaincodeStub := &mocks.FakeChaincodeStubInterface{}
	transactionContext := &mocks.FakeTransactionContextInterface{}
	transactionContext.GetStubReturns(chaincodeStub)

	ipkStr := "57db16be194b3619334f40648edcb9fc6639f7d7ed4fc64e946e34d063354aac"
	spkStr := "ebce1ff751e1d520021fafc0a268c61ad0fe00133f17bed5a6a2c78a82451e0f"
	rootStr := "2a638ffc1281dbd26549352aa39ab398441c73b053e6ad2b58696f6e0ff74f29"
	gvkStr := "e38078ab78d1fd6b2e7a8ef147143f6753631b85c17a2b7f8409270c9d39c2fcaac300077344523c35d7dc390cc8ca1530ddadba2b5a19413f4ac934fbc5a686a779775dd6a0e5e4bdf63d8470ca2d39e2b1153368163df9fb9398bdad0a8c48251b93185b0ad52328193eb76532e5e3e0e97c60fc9bce314665bfd5b754635f818b2d29895aab71fac03e61d5bb509cd80f9ba9c2aec440448e33a0386de1a60593092175d9ff46eba9e416b5ccdd00d55df277f0c7e33f1f86ecacbc637124ad1824170ba0c501eb1faa45af1c147207f0f1d70a35ad704d8cb46337b954bc9eb3afe6553d8b94f1f53458ee3b083f40914d75b7baaec53db9fd9438961b4a226d28a41189806b6e0fd77d2811678473151c54a9bbc59d725655887573d80100000010d4daab6321a501776a4d8b60afaaf84df7b7fc205ddb7ff174dcfbd3604de953e81ad1b99f502291955339c04c15a859b622f347aee4ea4d42ae3269b39575ddad1f6129eb216811a1834ad84323a1a41a7d2a4b66d1aa1c32c1e2e6e5e1c0c0ded66ba58f6174fe0a2ba49363e4fa21e3ff7ab956452ff0d4ca4a7b7b666930cc8d2ed189b2e4fd7d77cfbc2f58bdb07525b3f03f303136a48a820d350c51ff8885a8ef88df305088777f7dc135caaa7e5ef85f2a0ec795c0c3f48644214893868338f25b4663a7e939a322b37599cbd6844147fdee43305862f5884b373cbee3df633fdfd2c4584bba1cac6eefabae802b401e3043354506a63416688f703aa579527c5139207796121f967918b928746bba89b439ade96c094586be95f868e396554cddda46e5a667ec28f7bea79327e35c51aba8b027f6b7aa62539174db9956fe3d2ee8fac975b5149d2117b4a449826ba29adeaee9d1c82441433422c4ecc38e86a05e52755d6b61f75ab868afce96683e794ba6785d8e57330c1294b1974c55ccd09901c501d5f9bc90f62bc209f0d2bdd8b8d0ac343f9678dc48c489a8f850eb8362b229b82ec80e67745c08a7cb7ffdb84f7cf8b36bd787e71433189b9b4c3e1740e2ab3655fb8d69bf2050944fb97210e263bfd9d34a13da85b565e096ed0e4ca97c170b9f89f7987578b6034a4b0c15cf56568f787e9ca847f63c0000000100000000000000019bfa7469f1c6973950ec83b7f20ee034ec7fba36703cf39d8fd01506775f8b742b043c5563dbd078ebc60adb7594c9f10ca70a35d743ec7eeafc3d29e138ea14c3ad18b0ba73b60bc60277b02cfc05d626e7e7c502d899aefee5d6f87d47e4fe232db1ab3741add7815f9debacfffc1ac2242f17065f75d063f99c6d6713976b"

	psuManager := chaincode.SmartContract{}
	err := psuManager.InitLedger(transactionContext, ipkStr, spkStr, rootStr, gvkStr)
	require.NoError(t, err)

	proofStr := "ed469b839e884d7c2217b66c5a43d6af69138514120e80278bb3a6731b802b5cd1dae1fb7f1f9d8fc2705e47890ebbad8a258bf2eaec63e370c9ef991f3bc51c0a2dc574e71a0d43381a34220dd7602b3349903dbd2c7cfc5cda5722d66562ebde35ed0ec7c548b31dd0ff93dc706a4aafe28b9f4c751854eda630e3130335750000000196746964073e698d6ca70680336ed99ea7d6568c202f5da8ed9987f8da658305a563646188368b35277c320ffb6acd8f1d04074272891a99b6b127c6bfa7ff6c"
	witnessStr := "0000000e000000000000000e2a638ffc1281dbd26549352aa39ab398441c73b053e6ad2b58696f6e0ff74f292f748f112e4b5309efa050a417bba65af99477b782a23834159dd7e5f3bf673b2f89efa3a4fbb642986a12f00ac8a46c2919a16e59df460033ad510d666627891883b8af8c0a099750f7d415c9c5bce728e97cb9d2779d5606f7362b54592d042c4a3563d0346e944ec64fedd7f73966fcb9dc8e64404f3319364b19be16db5709e3e51317c1fdf1e83df24affa16565708ea948f5c248d86b0f0d5f847afe4527512f8d682afaf49a3e3504b0855ad71d8cf57860b8ee08a436d7733d0a4d9f049d36048844bee0d63a7a253dfb7d5cc677508a1b6992bb688cc6d56e0e2c590097b358ff093bc25895174b910e45ca712e718da1b78b57bba3308ab1f7cf6b0f1e45828ac7a2a6d5be173f1300fed01ac668a2c0af1f0220d5e151f71fceeb0754340b95b2f95b180f1c914301fabd88f06d52f32dd106099b6367be1adc5a09c123232a8485ae785b7c9f91f856ccdb5e9be16eaa05fa9f91e2da7f9e192e05310b7c97830678f7014ed039ed69d035dcb4c7d903f286fb46b44b009a0c7d115c6f2ea033485f8033f8d90ed42d9579dcfd97e3127a8be3a26eb75d539328"
	err = psuManager.CreatePseudonym(transactionContext, proofStr, witnessStr)
	require.NoError(t, err)
}
